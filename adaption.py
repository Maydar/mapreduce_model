import math
from random import random  # случайное число от 0 до 1

from model import model


def adapt():
    # ------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------
    # Массив исходных данных для адаптаци, ОТОШ - в %

    #    [{"N":3, "NM":2.0,"NR":2.0,"Q":10000000,"s":2,"ТЭКС":195.0,"L":2.5,"R":1.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
    #    {"N":3, "NM":2.0,"NR":2.0,"Q":10000000,"s":4,"ТЭКС":182.0,"L":2.5,"R":2.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
    #    {"N":3, "NM":2.0,"NR":2.0,"Q":20000000,"s":2,"ТЭКС":351.0,"L":5.5,"R":1.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
    #    {"N":3, "NM":2.0,"NR":2.0,"Q":20000000,"s":4,"ТЭКС":351.0,"L":5.5,"R":2.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
    #    {"N":3, "NM":2.0,"NR":1.0,"Q":30000000,"s":2,"ТЭКС":639.0,"L":8.0,"R":2.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
    #    {"N":3, "NM":2.0,"NR":2.0,"Q":30000000,"s":4,"ТЭКС":600.0,"L":8.0,"R":2.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
    #    {"N":6, "NM":3.0,"NR":2.0,"Q":10000000,"s":2,"ТЭКС":166.3,"L":1.67,"R":1.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
    #     {"N":6, "NM":3.0,"NR":4.0,"Q":10000000,"s":4,"ТЭКС":141.0,"L":1.67,"R":1.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
    #    {"N":6, "NM":5.0,"NR":2.0,"Q":20000000,"s":2,"ТЭКС":203.3,"L":2.2,"R":1.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
    #    {"N":6, "NM":5.0,"NR":3.0,"Q":20000000,"s":4,"ТЭКС":175.7,"L":2.2,"R":1.33,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
    #     {"N":6, "NM":5.0,"NR":2.0,"Q":30000000,"s":2,"ТЭКС":279.7,"L":3.2,"R":1.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
    #    {"N":6, "NM":5.0,"NR":3.0,"Q":30000000,"s":4,"ТЭКС":260.7,"L":3.2,"R":1.33,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
    ADP = [{"N": 9, "NM": 3.0, "NR": 2.0, "Q": 10000000, "s": 2, "ТЭКС": 148.3, "L": 1.67, "R": 1.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           #    {"N":9, "NM":3.0,"NR":4.0,"Q":10000000,"s":4,"ТЭКС":131.7,"L":1.67,"R":1.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
           #    {"N":9, "NM":6.0,"NR":2.0,"Q":20000000,"s":2,"ТЭКС":182.3,"L":1.83,"R":1.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
           #    {"N":9, "NM":6.0,"NR":4.0,"Q":20000000,"s":4,"ТЭКС":151.3,"L":1.83,"R":1.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
           {"N": 9, "NM": 8.0, "NR": 2.0, "Q": 30000000, "s": 2, "ТЭКС": 246.0, "L": 2.0, "R": 1.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 9, "NM": 8.0, "NR": 2.67, "Q": 30000000, "s": 4, "ТЭКС": 179.3, "L": 2.0, "R": 1.5, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0}]
    # -------------------------------------------------------------------------------------
    # Массив исходных данных для проверки адекватности
    ADK = [{"N": 3, "NM": 2.0, "NR": 2.0, "Q": 10000000, "s": 2, "ТЭКС": 195.0, "L": 2.5, "R": 1.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 3, "NM": 2.0, "NR": 2.0, "Q": 10000000, "s": 4, "ТЭКС": 182.0, "L": 2.5, "R": 2.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 3, "NM": 2.0, "NR": 2.0, "Q": 20000000, "s": 2, "ТЭКС": 351.0, "L": 5.5, "R": 1.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 3, "NM": 2.0, "NR": 2.0, "Q": 20000000, "s": 4, "ТЭКС": 351.0, "L": 5.5, "R": 2.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 3, "NM": 2.0, "NR": 1.0, "Q": 30000000, "s": 2, "ТЭКС": 639.0, "L": 8.0, "R": 2.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 3, "NM": 2.0, "NR": 2.0, "Q": 30000000, "s": 4, "ТЭКС": 600.0, "L": 8.0, "R": 2.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 6, "NM": 3.0, "NR": 2.0, "Q": 10000000, "s": 2, "ТЭКС": 166.3, "L": 1.67, "R": 1.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 6, "NM": 3.0, "NR": 4.0, "Q": 10000000, "s": 4, "ТЭКС": 141.0, "L": 1.67, "R": 1.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 6, "NM": 5.0, "NR": 2.0, "Q": 20000000, "s": 2, "ТЭКС": 203.3, "L": 2.2, "R": 1.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 6, "NM": 5.0, "NR": 3.0, "Q": 20000000, "s": 4, "ТЭКС": 175.7, "L": 2.2, "R": 1.33, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 6, "NM": 5.0, "NR": 2.0, "Q": 30000000, "s": 2, "ТЭКС": 279.7, "L": 3.2, "R": 1.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 6, "NM": 5.0, "NR": 3.0, "Q": 30000000, "s": 4, "ТЭКС": 260.7, "L": 3.2, "R": 1.33, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           #    {"N":9, "NM":3.0,"NR":2.0,"Q":10000000,"s":2,"ТЭКС":148.3,"L":1.67,"R":1.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0},
           {"N": 9, "NM": 3.0, "NR": 4.0, "Q": 10000000, "s": 4, "ТЭКС": 131.7, "L": 1.67, "R": 1.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 9, "NM": 6.0, "NR": 2.0, "Q": 20000000, "s": 2, "ТЭКС": 182.3, "L": 1.83, "R": 1.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0},
           {"N": 9, "NM": 6.0, "NR": 4.0, "Q": 20000000, "s": 4, "ТЭКС": 151.3, "L": 1.83, "R": 1.0, "ТМТЕК": 0.0,
            "ТМРАБ": 0.0, "ТМОПТ": 0.0, "ОТОШ": 0}]
    #    {"N":9, "NM":8.0,"NR":2.0,"Q":30000000,"s":2,"ТЭКС":246.0,"L":2.0,"R":1.0,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0}
    #    {"N":9, "NM":8.0,"NR":2.67,"Q":30000000,"s":4,"ТЭКС":179.3,"L":2.0,"R":1.5,"ТМТЕК":0.0,"ТМРАБ":0.0,"ТМОПТ":0.0,"ОТОШ":0}]
    # -------------------------------------------------------------------------------------
    # Значения адаптируемых параметров (начальные значения - для отладки)
    # mDR - 0, mDW -1, mdR -2,mdW -3,mPW- 4, mPR -5,mN1- 6, mN2 -7, t -8, dr -9, ds- 10, точность- 11
    ZAP = [[50.0, 24.0, 50.0, 50.0, 1024.0 / 8, 1024.0 / 8, 10.0, 10.0, 1.0E-6, 0.0, 0.0, 0.0],
           [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
           [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],  # оптимальная точка
           ["mDR", "mDW", "mdR", "mdW", "mPW", "mPR", "mN1", "mN2", "t", "dr", "ds", "сумма квад"]]
    # ------------------------------------------------------------------------------------
    # Границы адаптируемых параметров
    # АНГ - абсол. нижняя граница, АВГ - абсол. верхняя граница,ЧИ - число интерв.,АЗИ - абссол. значение интервала
    # ТТК - текущая точка, ЧПР - частная производная
    # Для удаления переменной из GAP надо сделать совпадающими АНГ и АВГ
    GAP = [{"АНГ": 4.0, "АВГ": 20.0, "ЧИ": 1000, "АЗИ": 0.0, "ТТК": 0.0, "ЧПР": 0.0},  # 0-mDR
           {"АНГ": 4.0, "АВГ": 20.0, "ЧИ": 1000, "АЗИ": 0.0, "ТТК": 0.0, "ЧПР": 0.0},  # 1-mDW
           {"АНГ": 4.0, "АВГ": 20.0, "ЧИ": 1000, "АЗИ": 0.0, "ТТК": 0.0, "ЧПР": 0.0},  # 2-mdR
           {"АНГ": 4.0, "АВГ": 20.0, "ЧИ": 1000, "АЗИ": 0.0, "ТТК": 0.0, "ЧПР": 0.0},  # 3-mdW
           {"АНГ": 24.0 / 8.0, "АВГ": 72.0 / 8.0, "ЧИ": 1000, "АЗИ": 0.0, "ТТК": 0.0, "ЧПР": 0.0},  # 4-mPW
           {"АНГ": 24.0 / 8.0, "АВГ": 72 / 8.0, "ЧИ": 1000, "АЗИ": 0.0, "ТТК": 0.0, "ЧПР": 0.0},  # 5-mPR
           {"АНГ": 3.0, "АВГ": 9.0, "ЧИ": 1000, "АЗИ": 0.0, "ТТК": 0.0, "ЧПР": 0.0},  # 6-mN1
           {"АНГ": 3.0, "АВГ": 9.0, "ЧИ": 1000, "АЗИ": 0.0, "ТТК": 0.0, "ЧПР": 0.0},  # 7-mN2
           {"АНГ": 1.0E-08, "АВГ": 5.0E-07, "ЧИ": 1000, "АЗИ": 0.0, "ТТК": 0.0, "ЧПР": 0.0},
           # 8-t "АНГ":1.0E-08,"АВГ":5.0E-07
           {"АНГ": 11.85, "АВГ": 11.85, "ЧИ": 1000, "АЗИ": 0.0, "ТТК": 0.0, "ЧПР": 0.0},  # 9 -dr
           {"АНГ": 24.8, "АВГ": 24.8, "ЧИ": 1000, "АЗИ": 0.0, "ТТК": 0.0, "ЧПР": 0.0}]  # 10 -ds
    # Генерация ТЭКС для отладки
    """for i in range(len(ADP)):
        model(ADP[i],ZAP[0])
        ADP[i]["ТЭКС"]=ADP[i]["ТМРАБ"]"""
    # ====================================================================================
    # Программа калибровки параметов в GAP методом МНК
    ktk = 100  # количество случайных точек
    mki = 100  # макс. число итераций
    for J1 in range(ktk):
        # Заполнение GAP[]["АЗИ"] и GAP[]["ТТК"]
        for i in range(len(GAP)):
            GAP[i]["АЗИ"] = (GAP[i]["АВГ"] - GAP[i]["АНГ"]) / GAP[i]["ЧИ"]
            GAP[i]["ТТК"] = GAP[i]["АНГ"] + (GAP[i]["АВГ"] - GAP[i]["АНГ"]) * random()
        # Движение по градиенту
        for J2 in range(mki):
            for i in range(len(GAP)):  # пересылка тчку GAP.TTK в ZAP
                ZAP[0][i] = GAP[i]["ТТК"]
            x = 0.0  # сумма квадратов (эксперимент - экспер. модель)
            for i in range(len(ADP)):  # определение GAP.ТМТЕК  и сумму квадратов
                model(ADP[i], ZAP[0])
                y = ADP[i]["ТМРАБ"]
                ADP[i]["ТМТЕК"] = y
                z = ADP[i]["ТЭКС"]
                x += math.pow(y - z, 2)  # степень 2
            ZAP[0][-1] = x  # сумма квадратов (эксперимент - экспер. модель)
            if J2 == 0:  # первая точка?
                for j in range(len(ZAP[0])):
                    ZAP[1][j] = ZAP[0][j]  # сохранить 1-ю точку
            elif ZAP[0][-1] < ZAP[1][-1]:
                for j in range(len(ZAP[0])):
                    ZAP[1][j] = ZAP[0][j]  # погрешность уменьшилась
            else:
                STRE = "ОПТИМАЛЬНАЯ ТОЧКА НАЙДЕНА"
                print(STRE, ZAP[1][-1], J2 + 1)
                break  # выйти из цика по J2
            # цикл по GAP (по числу переменных)-----------------
            for J3 in range(len(GAP)):
                if GAP[J3]["АЗИ"] == 0:
                    continue
                prz = 0  # производная суммы квадратов по переменной J3
                sohr = ZAP[0][J3]  # сохранить переменную
                ZAP[0][J3] += GAP[J3]["АЗИ"]  # увеличить переменную J3 на шаг для вычисл. производной на модели
                # цикл по ADP (по числу натурных экспериментов)
                for J4 in range(len(ADP)):
                    model(ADP[J4], ZAP[0])
                    prz += 2 * (ADP[J4]["ТМТЕК"] - ADP[J4]["ТЭКС"]) * (ADP[J4]["ТМРАБ"] - ADP[J4]["ТМТЕК"]) / GAP[J3][
                        "АЗИ"]
                GAP[J3]["ЧПР"] = -prz  # сохранить частную производную
                ZAP[0][J3] = sohr  # восстановить переменную
            # крнец цикла по J3----------------------------------
            # перейти к следующей точке ТТК по градиенту
            mxm = -1
            for i in range(len(GAP)):
                x = math.fabs(GAP[i]["ЧПР"])
                if x > mxm:
                    mxm = x
            if mxm == 0:
                STRE = "ВСЕ ПРОИЗВОДНЫЕ РАВНЫ 0"
                print(STRE, ZAP[1][-1], J2 + 1)
                break  # выйти из цика по J2
            x1 = 1
            for i in range(len(GAP)):
                GAP[i]["ТТК"] += GAP[i]["ЧПР"] / mxm * GAP[i]["АЗИ"]
                x = GAP[i]["ТТК"]
                if x < GAP[i]["АНГ"] or x > GAP[i]["АВГ"]:
                    break
            else:
                x1 = 0
            if x1 > 0:
                STRE = "ЗНАЧЕНИЕ ВЫШЛО ЗА ПРЕДЕЛЫ ГРАНИЦ"
                print(STRE, ZAP[1][-1], J2 + 1, ZAP[3][i], x)
                break  # выйти из цика по J2
        # конец цикла по J2--------------------------------------
        else:
            STRE = "ПРЕВЫШЕН ПРЕДЕЛ ИТЕРАЦИЙ"
            print(STRE, ZAP[1][-1], J2 + 1)
        # сохранить оптимальную точку ==================
        if J1 == 0 or ZAP[1][-1] < ZAP[2][-1]:
            for j in range(len(ZAP[0])):
                ZAP[2][j] = ZAP[1][j]
            for i in range(len(ADP)):
                y = ADP[i]["ТМТЕК"]
                ADP[i]["ТМОПТ"] = y
                z = ADP[i]["ТЭКС"]
                if z != 0:
                    ADP[i]["ОТОШ"] = math.floor(
                        math.fabs(y - z) / z * 100 + 0.5)  # ADP[i]["ОТОШ"]=math.ceil(math.fabs(y-z)/z*100)
                else:
                    ADP[i]["ОТОШ"] = 0
    # конец цикла по J1--------------------------------------
    # r=0 # ничего не делает - pass
    # эксперименты для проверки адекватности ---------------------
    for i in range(len(ADK)):
        model(ADK[i], ZAP[2])
        y = ADK[i]["ТМРАБ"]
        ADK[i]["ТМОПТ"] = y
        z = ADK[i]["ТЭКС"]
        if z != 0:
            ADK[i]["ОТОШ"] = math.floor(math.fabs(y - z) / z * 100 + 0.5)
        else:
            ADK[i]["ОТОШ"] = 0
    return {
        "ADP": ADP,
        "ADK": ADK,
        "ZAP": ZAP
    }
    # -------------------------------------------------------------